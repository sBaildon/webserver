---
- hosts: machine
  tasks:

  - name: "Perform dnf upate"
    dnf:
      name: "*"
      state: latest

  - name: "Install vim-enhanced"
    dnf:
      name: vim-enhanced

  - name: "Install golang"
    dnf:
      name: golang

  - name: "Install docker-ce"
    block:
    - name: "Add docker-ce-stable repository"
      yum_repository:
        name: docker-ce
        description: "Docker CE Stable"
        baseurl: "https://download.docker.com/linux/fedora/$releasever/$basearch/stable"
        gpgcheck: yes
        gpgkey: "https://download.docker.com/linux/fedora/gpg"

    - name: "Install docker-ce"
      dnf:
        name: docker-ce

  - name: "Install wireguard"
    block:
    - name: "Add wireguard repository"
      yum_repository:
        name: "wireguard"
        description: "Copr repo for wireguard owned by jdoss"
        baseurl: "https://copr-be.cloud.fedoraproject.org/results/jdoss/wireguard/epel-7-$basearch/"
        gpgcheck: yes
        gpgkey: "https://copr-be.cloud.fedoraproject.org/results/jdoss/wireguard/pubkey.gpg"
    - name: "Install wireguard packages"
      dnf:
        name: ['wireguard-dkms', 'wireguard-tools']

  - name: "Install docker-py"
    pip:
      name: docker-py
      extra_args: --user

  - name: "Enable and start docker"
    systemd:
      name: docker
      enabled: yes
      state: started

  - name: "Install tmux"
    dnf:
      name: tmux

  - name: "Install nginx"
    dnf:
      name: nginx

  - name: "Install git"
    dnf:
      name: git

  - name: "Install tree"
    dnf:
      name: tree

  - name: "Install wget"
    dnf:
      name: wget

  - name: "Install nodejs"
    dnf:
      name: nodejs

  - name: "Install yarn"
    block:
    - name: "Add yarn repository"
      yum_repository:
        name: yarn
        description: yarn
        baseurl: "https://dl.yarnpkg.com/rpm/"
        gpgcheck: yes
        gpgkey: "https://dl.yarnpkg.com/rpm/pubkey.gpg"
    - name: "Install yarn"
      dnf:
        name: yarn

  - name: "Install caddy"
    block:
    - name: "Get caddy binary"
      shell: "curl https://getcaddy.com | bash -s personal http.mailout,http.git"
    - name: "Create caddy directory"
      file:
        path: /etc/caddy
        state: directory
        mode: 0755
        owner: root
        group: "{{ machine.users.unprivileged.name }}"
    - name: "Create caddy ssl directory"
      file:
        path: /etc/ssl/caddy
        state: directory
        mode: 0770
        owner: "{{ machine.users.unprivileged.name }}"
        group: root
    - name: "Caddy service file"
      get_url:
        url: "https://raw.githubusercontent.com/mholt/caddy/master/dist/init/linux-systemd/caddy.service"
        dest: /etc/systemd/system/caddy.service
        mode: 0644
        owner: root
        group: root
    - name: "Set CapabilityBoundingSet"
      replace:
        path: /etc/systemd/system/caddy.service
        regexp: '^;(CapabilityBoundingSet*)'
        replace: '\1'
    - name: "Set AmbientCapabilities"
      replace:
        path: /etc/systemd/system/caddy.service
        regexp: '^;(AmbientCapabilities*)'
        replace: '\1'
    - name: "Set NoNewPrivileges"
      replace:
        path: /etc/systemd/system/caddy.service
        regexp: '^;(NoNewPrivileges*)'
        replace: '\1'
    - name: "Dont protect caddy home"
      lineinfile:
        path: /etc/systemd/system/caddy.service
        regexp: '^ProtectHome.*'
        line: 'ProtectHome=false'
